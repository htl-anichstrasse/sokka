version: "3.6"
services:
  # nginx reverse proxy, this service distributes traffic to underlying services via virtual hosts
  proxy:
    image: jwilder/nginx-proxy:latest
    container_name: "proxy"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    restart: always
    environment:
      - DEFAULT_HOST=default.sokka.me
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "certs-volume:/etc/nginx/certs:ro"
      - "/usr/share/nginx/html"
      - "./vhost.conf:/etc/nginx/vhost.d"
      - "./proxy.conf:/etc/nginx/conf.d"
  # LE companion for nginx reverse proxy, used for automatically creating TLS cerificates for Sokka services
  nginx-letsencrypt-companion:
    depends_on:
      - proxy
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: "sokka_proxy_ssl"
    restart: always
    volumes:
      - "certs-volume:/etc/nginx/certs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./proxy.conf:/etc/nginx/conf.d"
    # MySQL database
  mysql:
    image: mysql:latest
    container_name: "api.sokka.me_db"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: default_schema
    cap_add:
      - SYS_NICE
  # phpMyAdmin container for easily debugging MySQL, you can remove this if not needed
  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "api.sokka.me_pma"
    restart: always
    links:
      - mysql
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
      - NGINX_HOST=pma.sokka.me
      - VIRTUAL_PORT=8095
      - VIRTUAL_HOST=pma.sokka.me
      - LETSENCRYPT_HOST=pma.sokka.me
      - LETSENCRYPT_EMAIL=jos.winkler@tsn.at
    ports:
      - "8095:80"
    # API and Sokka backend service
  api:
    depends_on:
      - proxy
      - mysql
    links:
      - mysql
    container_name: "api.sokka.me"
    image: htl-anichstrasse/sokka:v1
    restart: always
    volumes:
      - ./data/images:/usr/src/server/images
    ports:
      - "8090:8090"
    secrets:
      - MYSQL_DB
      - MYSQL_HOST
      - MYSQL_USERNAME
      - MYSQL_PASSWORD
      - VERIFY_EMAIL
      - VERIFY_EMAIL_PASSWORD
    environment:
      - TZ=Europe/Vienna
      - NGINX_HOST=api.sokka.me
      - NGINX_PORT=8090
      - DEBUG=false
      - DEBUG_LOG=true
      - PORT=8090
      - DOMAIN=https://api.sokka.me
      - VIRTUAL_PORT=8090
      - VIRTUAL_HOST=api.sokka.me
      - LETSENCRYPT_HOST=api.sokka.me
      - LETSENCRYPT_EMAIL=jos.winkler@tsn.at
      - SALT_ROUNDS=10
      - MAX_USER_SESSIONS=3
      - MAX_ACP_USER_SESSIONS=1
  # ACP React app for managing the Sokka system
  acp:
    depends_on:
      - proxy
    container_name: "acp.sokka.me"
    image: nginx
    restart: always
    volumes:
      - ./acp/build:/usr/share/nginx/html
      - ./acp/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8065:80"
    environment:
      - NGINX_HOST=acp.sokka.me
      - NGINX_PORT=80
      - VIRTUAL_HOST=acp.sokka.me
      - HTTPS_METHOD=noredirect
      - LETSENCRYPT_HOST=acp.sokka.me
      - LETSENCRYPT_EMAIL=jos.winkler@tsn.at
  # Main Page - DELETE THIS, this is just used for hosting Sokka's main page at www.sokka.me
  main:
    depends_on:
      - proxy
    image: nginx
    container_name: "sokka.me"
    restart: always
    volumes:
      - ./main/html:/usr/share/nginx/html
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=sokka.me
      - NGINX_PORT=80
      - VIRTUAL_HOST=sokka.me,www.sokka.me
      - LETSENCRYPT_HOST=sokka.me,www.sokka.me
      - LETSENCRYPT_EMAIL=jos.winkler@tsn.at
  # Fallback page for unmapped virtual hosts (e. g. this page will be shown when someone tries to access your server via IP)
  default:
    depends_on:
      - proxy
    container_name: "default.sokka.me"
    image: nginx
    restart: always
    volumes:
      - ./default:/usr/share/nginx/html
    ports:
      - "8082:80"
    environment:
      - NGINX_HOST=default.sokka.me
      - NGINX_PORT=80
      - VIRTUAL_HOST=default.sokka.me
      - HTTPS_METHOD=noredirect
# Docker Secrets, make sure to create these files with the corresponding content before firing up the services
secrets:
  MYSQL_DB:
    file: ./secrets/MYSQL_DB.txt
  MYSQL_HOST:
    file: ./secrets/MYSQL_HOST.txt
  MYSQL_USERNAME:
    file: ./secrets/MYSQL_USERNAME.txt
  MYSQL_PASSWORD:
    file: ./secrets/MYSQL_PASSWORD.txt
  VERIFY_EMAIL:
    file: ./secrets/VERIFY_EMAIL.txt
  VERIFY_EMAIL_PASSWORD:
    file: ./secrets/VERIFY_EMAIL_PASSWORD.txt
volumes:
  certs-volume:
